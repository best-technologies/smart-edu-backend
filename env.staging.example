# =================================
# STAGING ENVIRONMENT CONFIGURATION
# =================================
# Copy this file to .env.staging and fill in your staging values
# This is for team/client testing with production-like setup

# =================================
# APPLICATION SETTINGS
# =================================
NODE_ENV=staging
APP_PORT=2000
NGINX_PORT=8080
POSTGRES_PORT=5433
REDIS_PORT=6380

# =================================
# DATABASE CONFIGURATION
# =================================
# PostgreSQL Database (Staging)
POSTGRES_DB=smart_edu_staging
POSTGRES_USER=postgres
POSTGRES_PASSWORD=your_staging_db_password_here

# Database URL for the application
DATABASE_URL=postgresql://postgres:your_staging_db_password_here@localhost:5433/smart_edu_staging

# =================================
# REDIS CONFIGURATION
# =================================
REDIS_URL=redis://:your_staging_redis_password_here@localhost:6380
REDIS_PASSWORD=your_staging_redis_password_here

# =================================
# JWT CONFIGURATION
# =================================
JWT_SECRET=your_staging_jwt_secret_here_make_it_long_and_random
JWT_EXPIRES_IN=7d

# =================================
# EMAIL CONFIGURATION
# =================================
# For staging, you might want to use a test email service
SMTP_HOST=your_staging_smtp_host
SMTP_PORT=587
SMTP_USER=your_staging_smtp_user
SMTP_PASS=your_staging_smtp_password
FROM_EMAIL=noreply@your-staging-domain.com

# =================================
# AWS S3 CONFIGURATION
# =================================
# Use a separate S3 bucket for staging
AWS_ACCESS_KEY_ID=your_staging_aws_access_key
AWS_SECRET_ACCESS_KEY=your_staging_aws_secret_key
AWS_REGION=us-east-1
AWS_S3_BUCKET=your-app-staging-bucket

# =================================
# OPENAI CONFIGURATION
# =================================
# Use staging/test API keys
OPENAI_API_KEY=your_staging_openai_api_key

# =================================
# PINECONE CONFIGURATION
# =================================
PINECONE_API_KEY=your_staging_pinecone_api_key
PINECONE_ENVIRONMENT=your_staging_pinecone_environment
# Note: Index name is automatically set based on NODE_ENV
# Staging will use: sm-ai-chat-chunks-staging

# =================================
# PUSH NOTIFICATIONS
# =================================
# Use staging FCM keys
FCM_SERVER_KEY=your_staging_fcm_server_key

# =================================
# SECURITY & RATE LIMITING
# =================================
# Staging-specific rate limits (more lenient for testing)
RATE_LIMIT_TTL=900
RATE_LIMIT_LIMIT=1000

# CORS for staging (allow your staging domain)
CORS_ORIGIN=https://your-staging-domain.com,http://localhost:3000

# =================================
# MONITORING & LOGGING
# =================================
# Staging-specific logging
LOG_LEVEL=debug
ENABLE_REQUEST_LOGGING=true

# =================================
# FEATURE FLAGS
# =================================
# Enable features for testing
ENABLE_SWAGGER=true
ENABLE_PRISMA_STUDIO=true

# =================================
# BACKUP CONFIGURATION
# =================================
# Staging backups (less frequent than production)
BACKUP_RETENTION_DAYS=7
BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM

# =================================
# EXTERNAL SERVICES
# =================================
# Use staging/test versions of external services
PAYMENT_GATEWAY_URL=https://api-sandbox.your-payment-provider.com
SMS_PROVIDER_URL=https://api-staging.your-sms-provider.com

# =================================
# DEVELOPMENT HELPERS
# =================================
# These help with staging environment management
STAGING_TAG=staging-v1.0.0
ENABLE_DEBUG_ROUTES=true
MOCK_EXTERNAL_APIS=false
