services:
  # PostgreSQL Database
  postgres:
    image: pgvector/pgvector:pg15
    container_name: smart-edu-prod-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB:-smart_edu_prod}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - smart-edu-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-smart_edu_prod}"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: smart-edu-prod-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - smart-edu-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # Smart Edu Backend Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: smart-edu-prod-app
    restart: unless-stopped
    ports:
      - "${APP_PORT:-1000}:1000"
    env_file:
      - .env.prod
    environment:
      # Override specific variables for production Docker environment
      NODE_ENV: production
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-smart_edu_prod}
      REDIS_URL: redis://redis:6379
      
    networks:
      - smart-edu-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:1000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: smart-edu-prod-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    networks:
      - smart-edu-network
    depends_on:
      - app
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  # Database Backup Service
  db-backup:
    image: pgvector/pgvector:pg15
    container_name: smart-edu-prod-backup
    restart: "no"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB:-smart_edu_prod}
      POSTGRES_HOST: postgres
    volumes:
      - ./backups:/backups
      - ./scripts/backup.sh:/backup.sh:ro
    networks:
      - smart-edu-network
    depends_on:
      postgres:
        condition: service_healthy
    command: sh -c "chmod +x /backup.sh && /backup.sh"
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  smart-edu-network:
    driver: bridge
